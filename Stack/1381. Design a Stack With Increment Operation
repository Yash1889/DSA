//C++
//STACK
//1381. Design a Stack With Increment Operation
//LEETCODE 

class CustomStack {
public:
vector<int> ans;
int size;
    CustomStack(int maxSize) {
        size=maxSize;
    }
    
    void push(int x) {
        if(ans.size()==size){
            return;
        }
        ans.push_back(x);
    }
    
    int pop() {
        if(ans.empty()){
            return -1;
        }
            int t = ans[ans.size()-1];
            ans.pop_back();
            return t;
        }

    
    void increment(int k, int val) {
        int t=ans.size();
        k = min(k,t);
        for(int i=0;i<k;i++){
            ans[i]+=val;
        }
    }
};

/**
 * Your CustomStack object will be instantiated and called as such:
 * CustomStack* obj = new CustomStack(maxSize);
 * obj->push(x);
 * int param_2 = obj->pop();
 * obj->increment(k,val);
 */
